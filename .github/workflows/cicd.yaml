name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main

jobs:
  build-and-push-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    environment: dev
    steps:
      - name: Check out the code # check out application repository
        uses: actions/checkout@v2
      
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image for dev
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: bryan292/devops-assignment-app:dev

  build-and-push-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: prod
    steps:
      - name: Check out the code # check out application repository
        uses: actions/checkout@v2
      
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image for prod
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            bryan292/devops-assignment-app:prod
            bryan292/devops-assignment-app:latest

  deploy-infra:
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [build-and-push-dev, build-and-push-prod]
    steps:    
      - name: Check out the code # check out application repository
        uses: actions/checkout@v2

      - name: Checkout Infra Repository
        uses: actions/checkout@v2
        with:
          repository: 'bryan292/multi-cloud-k8s-iac'
          path: 'multi-cloud-k8s-iac' # Checks out infra repository into a directory named 'multi-cloud-k8s-iac'
      
      - name: Install Terragrunt # Install Terragrunt
        run: |
          TERRAGRUNT_VERSION="0.55.20" # Specify the desired Terragrunt version
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7.5 # Terraform version
          terraform_wrapper: false # Use the Terraform wrapper as false so that we can use Terragrunt
      
      - name: Deploy with Terragrunt # Deploy the infrastructure using Terragrunt, copy the config file and run the apply command not interactively
        run: |
          cd multi-cloud-k8s-iac/env
          cp ../../config.yaml .
          terragrunt run-all apply --terragrunt-non-interactive
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
